[{"/Users/music/apps/in-tune/ui/src/index.tsx":"1","/Users/music/apps/in-tune/ui/src/App.tsx":"2","/Users/music/apps/in-tune/ui/src/Keys/index.ts":"3","/Users/music/apps/in-tune/ui/src/Components/BarAndSelectors/index.ts":"4","/Users/music/apps/in-tune/ui/src/Keys/keys.ts":"5","/Users/music/apps/in-tune/ui/src/Components/BarAndSelectors/BarAndSelectors.tsx":"6","/Users/music/apps/in-tune/ui/src/Components/Selectors/Keys/index.ts":"7","/Users/music/apps/in-tune/ui/src/Components/MusicNotation/Bar/index.ts":"8","/Users/music/apps/in-tune/ui/src/Components/Selectors/Scales/index.ts":"9","/Users/music/apps/in-tune/ui/src/Components/Selectors/Keys/Keys.tsx":"10","/Users/music/apps/in-tune/ui/src/Components/MusicNotation/Bar/Bar.tsx":"11","/Users/music/apps/in-tune/ui/src/Components/Selectors/Scales/Scales.tsx":"12"},{"size":174,"mtime":1607557436000,"results":"13","hashOfConfig":"14"},{"size":6557,"mtime":1607557436000,"results":"15","hashOfConfig":"14"},{"size":23,"mtime":1607557436000,"results":"16","hashOfConfig":"14"},{"size":34,"mtime":1607557436000,"results":"17","hashOfConfig":"14"},{"size":343,"mtime":1607557436000,"results":"18","hashOfConfig":"14"},{"size":1368,"mtime":1607557436000,"results":"19","hashOfConfig":"14"},{"size":23,"mtime":1607557436000,"results":"20","hashOfConfig":"14"},{"size":22,"mtime":1607557436000,"results":"21","hashOfConfig":"14"},{"size":25,"mtime":1607557436000,"results":"22","hashOfConfig":"14"},{"size":1046,"mtime":1607557436000,"results":"23","hashOfConfig":"14"},{"size":1298,"mtime":1607557436000,"results":"24","hashOfConfig":"14"},{"size":1017,"mtime":1607557436000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ntbj5m",{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/music/apps/in-tune/ui/src/index.tsx",[],["52","53"],"/Users/music/apps/in-tune/ui/src/App.tsx",["54","55","56","57"],"import React, { useState, useReducer, useEffect } from 'react';\nimport 'semantic-ui-css/semantic.min.css'\nimport { Button, Input, Icon } from 'semantic-ui-react'\nimport styled from 'styled-components'\nimport { ScaleType, Interval } from \"@tonaljs/tonal\"\n\nimport './App.css';\nimport { BarAndSelectors } from './Components/BarAndSelectors'\nimport { KeysToRootNoteMap } from './Keys'\n\nconst { NODE_ENV } = process.env\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst BarsWrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n\n  max-width: 1200px;\n`\n\nconst InputsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  margin: 0px 0px 15px 0px;\n`\n\nconst TemposWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst CurrentLocationMarker = styled.div`\n  position: absolute;\n\n  height: 120px;\n  width: 5px;\n\n  background-color: red;\n\n  /*\n  transition-property: left;\n  transition-duration: 50ms;\n  */\n`\n\ntype BarState = {\n  musicKey: string;\n  scale: string;\n}\n\nconst initialBars: BarState[] = [\n  {\n    musicKey: \"C\",\n    scale: \"major\",\n  }\n]\n\ntype Action = {\n  idx: number;\n  type: string;\n  data: string;\n}\n\ntype BarReducerFn = (state: BarState[], action: Action) => BarState[];\n\nconst barReducer: BarReducerFn = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE_KEY\":\n      return state.map((bar, idx) => {\n        if (idx === action.idx) {\n          return { ...bar, musicKey: action.data }\n        }\n\n        return bar\n      })\n\n    case \"CHANGE_SCALE\":\n      return state.map((bar, idx) => {\n        if (idx === action.idx) {\n          return { ...bar, scale: action.data }\n        }\n\n        return bar\n      })\n\n    case \"ADD_BAR\":\n      return [...state, { musicKey: \"C\", scale: \"major\" }]\n\n    case \"REMOVE_BAR\":\n    return [...state].filter((bar, idx) => {\n      return idx !== action.idx\n    });\n\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  const [bars, dispatch] = useReducer(\n    barReducer,\n    initialBars,\n  );\n  const [tempo, setTempo] = useState(108)\n  const [beatsPerBar, setBeatsPerBar] = useState(4)\n  const [icon, setIcon] = useState('play')\n  const [currentMS, setCurrentMS] = useState(0)\n  const [intrvl, setIntrvl] = useState(0)\n  const [startTime, setStartTime] = useState(0)\n  const [top, setTop] = useState(62.5)\n  const [left, setLeft] = useState(0)\n  const [currentBar, setCurrentBar] = useState(0)\n\n  const handleKeyChange = (idx: number, data: string) => {\n    dispatch({ idx, type: 'CHANGE_KEY', data });\n  };\n  const handleScaleChange = (idx: number, data: string) => {\n    dispatch({ idx, type: 'CHANGE_SCALE', data });\n  };\n\n  useEffect(() => {\n    if (icon === 'play') {\n      clearInterval(intrvl)\n      setStartTime(0)\n      setCurrentMS(0)\n      setCurrentBar(-1)\n      setLeft(0)\n      setTop(62.5)\n\n      if (NODE_ENV === 'production') {\n        // @ts-ignore\n        // eslint-disable-next-line\n        external.invoke(`stop`)\n      }\n    } else {\n      setCurrentMS(0)\n      const t = new Date().getTime()\n      setStartTime(t)\n      ;((tmpTime) => {\n        const tmpInterval = setInterval(() => {\n          setCurrentMS(new Date().getTime() - tmpTime)\n        }, 50)\n        setIntrvl(tmpInterval)\n      })(t);\n    }\n  }, [icon])\n\n  useEffect(() => {\n    //console.log(`currentMS: ${currentMS}`)\n    if (currentMS === 0) {\n      setLeft(0)\n      setTop(62.5)\n\n    } else {\n      const msPerBeat = (60 * 1000) / tempo\n      const numBeats = currentMS / msPerBeat\n      const barNumber = Math.floor(numBeats / beatsPerBar)\n      const tmpCurrentBar = barNumber % bars.length\n      setCurrentBar(tmpCurrentBar)\n\n      // note: 4 bars per line\n      // note: 300px per bar\n      setLeft((tmpCurrentBar % 4) * 300 + (numBeats % beatsPerBar) * (300 / beatsPerBar))\n      setTop(Math.floor(tmpCurrentBar / 4) * 212.5 + 62.5)\n    }\n  }, [currentMS])\n\n  useEffect(() => {\n    console.log(`currentBar: ${currentBar}`)\n    if (currentBar < 0) {\n      return\n    }\n\n    if (NODE_ENV === 'production') {\n      const { musicKey, scale }= bars[currentBar]\n      const keyIDX = KeysToRootNoteMap[musicKey]\n      const { intervals } = ScaleType.get(scale)\n      const semitones = intervals.map(interval => {\n        return Interval.semitones(interval)\n      })\n\n      // @ts-ignore\n      // eslint-disable-next-line\n      external.invoke(`set ${keyIDX} [${semitones.join(\",\")}]`)\n    }\n  }, [currentBar])\n\n  return (\n    <Wrapper className=\"App\">\n      <InputsWrapper>\n        <TemposWrapper>\n          <Input\n            disabled={icon === 'stop'}\n            label='Tempo (BPM)'\n            value={tempo}\n            onChange={e => {\n              setTempo(Number(e.currentTarget.value))\n            }}\n          />\n          <Input\n            disabled={icon === 'stop'}\n            label='Beats per Bar'\n            value={beatsPerBar}\n            onChange={e => {\n              setBeatsPerBar(Number(e.currentTarget.value))\n            }}\n          />\n        </TemposWrapper>\n        <Icon \n          // @ts-ignore\n          name={icon} \n          size='huge' \n          onClick={() => {\n            if (icon === 'play') {\n              setIcon('stop')\n            } else {\n              setIcon('play')\n            }\n          }}\n          style={{ cursor: 'pointer' }} \n        />\n      </InputsWrapper>\n      <BarsWrapper>\n        <CurrentLocationMarker \n            style={{\n              top: `${top}px`,\n              left: `${left}px`,\n            }}\n        />\n        {(bars as BarState[]).map((bar, idx) => (\n          <BarAndSelectors\n            key={idx}\n            disableSelectors={icon === 'stop'}\n\n            musicKey={bar.musicKey}\n            onKeyChange={(key: string) => { handleKeyChange(idx, key) }}\n\n            scale={bar.scale}\n            onScaleChange={(scale: string) => { handleScaleChange(idx, scale) }}\n\n            hasClef={idx % 4 === 0}\n            hasRepeat={idx === bars.length - 1}\n\n            showRemoveIcon={icon !== 'stop'}\n            remove={() => { \n              if (icon !== 'stop') {\n                dispatch({ idx, type: 'REMOVE_BAR', data: '' }) \n              }\n            }}\n          />\n        ))}\n      </BarsWrapper>\n      <div>\n        <Button\n          primary\n          disabled={icon === 'stop'}\n          onClick={() => { dispatch({ idx: -1, type: 'ADD_BAR', data: '' }) }}\n        >\n          Add Bar\n        </Button>\n      </div>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","/Users/music/apps/in-tune/ui/src/Keys/index.ts",[],"/Users/music/apps/in-tune/ui/src/Components/BarAndSelectors/index.ts",[],"/Users/music/apps/in-tune/ui/src/Keys/keys.ts",[],"/Users/music/apps/in-tune/ui/src/Components/BarAndSelectors/BarAndSelectors.tsx",[],"/Users/music/apps/in-tune/ui/src/Components/Selectors/Keys/index.ts",[],"/Users/music/apps/in-tune/ui/src/Components/MusicNotation/Bar/index.ts",[],"/Users/music/apps/in-tune/ui/src/Components/Selectors/Scales/index.ts",[],"/Users/music/apps/in-tune/ui/src/Components/Selectors/Keys/Keys.tsx",[],"/Users/music/apps/in-tune/ui/src/Components/MusicNotation/Bar/Bar.tsx",[],"/Users/music/apps/in-tune/ui/src/Components/Selectors/Scales/Scales.tsx",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":118,"column":10,"nodeType":"64","messageId":"65","endLine":118,"endColumn":19},{"ruleId":"66","severity":1,"message":"67","line":155,"column":6,"nodeType":"68","endLine":155,"endColumn":12,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"70","line":175,"column":6,"nodeType":"68","endLine":175,"endColumn":17,"suggestions":"71"},{"ruleId":"66","severity":1,"message":"72","line":195,"column":6,"nodeType":"68","endLine":195,"endColumn":18,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"@typescript-eslint/no-unused-vars","'startTime' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'intrvl'. Either include it or remove the dependency array.","ArrayExpression",["76"],"React Hook useEffect has missing dependencies: 'bars.length', 'beatsPerBar', and 'tempo'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLeft' needs the current value of 'beatsPerBar'.",["77"],"React Hook useEffect has a missing dependency: 'bars'. Either include it or remove the dependency array.",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [icon, intrvl]",{"range":"85","text":"86"},"Update the dependencies array to be: [bars.length, beatsPerBar, currentMS, tempo]",{"range":"87","text":"88"},"Update the dependencies array to be: [bars, currentBar]",{"range":"89","text":"90"},[3350,3356],"[icon, intrvl]",[3957,3968],"[bars.length, beatsPerBar, currentMS, tempo]",[4502,4514],"[bars, currentBar]"]